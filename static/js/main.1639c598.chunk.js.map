{"version":3,"sources":["components/BrewMethodSelection.module.css","components/Dice.js","components/BrewMethodSelection.js","App.js","reportWebVitals.js","index.js","components/Dice.module.css"],"names":["module","exports","container","title","introText","options","option","customMethodInput","submitButton","Dice","_ref","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","spinning","setSpinning","useEffect","timer","randomIndex","Math","floor","random","randomX","randomY","setTimeout","index","rotation","x","y","clearTimeout","diceSides","concat","_toConsumableArray","Array","length","fill","React","createElement","className","styles","dice","rolling","style","transform","map","key","face","aria-label","roll","onClick","disabled","aria-disabled","initialMethods","BrewMethodSelection","selectedMethods","setSelectedMethods","allMethods","setAllMethods","customMethod","setCustomMethod","_useState5","_useState6","error","setError","localStorage","setItem","JSON","stringify","loadedMethods","getItem","parse","toggleMethod","method","includes","filter","m","onSubmit","event","preventDefault","type","id","checked","onChange","value","target","placeholder","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","face-1","face-2","face-3","face-4","face-5","face-6"],"mappings":"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","file":"static/js/main.1639c598.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BrewMethodSelection_container__1HJUc\",\"title\":\"BrewMethodSelection_title__E0QbJ\",\"introText\":\"BrewMethodSelection_introText__3gOx8\",\"options\":\"BrewMethodSelection_options__2Bi0a\",\"option\":\"BrewMethodSelection_option__2kKcG\",\"customMethodInput\":\"BrewMethodSelection_customMethodInput__brLB8\",\"submitButton\":\"BrewMethodSelection_submitButton__3bSe-\"};","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Dice.module.css\";\n\nfunction Dice({ options }) {\n  const [result, setResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n\n  useEffect(() => {\n    let timer;\n    if (spinning) {\n      const randomIndex = Math.floor(Math.random() * 6); // Always generate a number between 0 and 5\n      const randomX = Math.floor(Math.random() * 4) * 90;\n      const randomY = Math.floor(Math.random() * 4) * 360;\n      timer = setTimeout(() => {\n        setResult({ index: randomIndex, rotation: { x: randomX, y: randomY } });\n        setSpinning(false);\n      }, 4050);\n    }\n    return () => clearTimeout(timer);\n  }, [spinning]);\n\n  const spinDice = () => {\n    setSpinning(true);\n  };\n\n  // Create an array of 6 elements, filled with the selected methods and \"ROLL AGAIN!\" if necessary\n  const diceSides = [\n    ...options,\n    ...Array(6 - options.length).fill(\"ROLL AGAIN!\"),\n  ];\n\n  return (\n    <div className={styles.container}>\n      <div\n        className={`${styles.dice}${spinning ? ` ${styles.rolling}` : \"\"}`}\n        style={\n          result\n            ? {\n                transform: `rotateX(${result.rotation.x}deg) rotateY(${result.rotation.y}deg)`,\n              }\n            : {}\n        }\n      >\n        {diceSides.map((option, index) => (\n          <div\n            key={index}\n            className={`${styles.face} ${styles[`face-${index + 1}`]}`}\n            aria-label={option}\n          >\n            <span>{option}</span>\n          </div>\n        ))}\n      </div>\n      <button\n        className={styles.roll}\n        onClick={spinDice}\n        disabled={spinning}\n        aria-disabled={spinning}\n      >\n        Roll Dice\n      </button>\n    </div>\n  );\n}\n\nDice.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default Dice;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./BrewMethodSelection.module.css\";\n\nconst initialMethods = [\n  \"Aeropress\",\n  \"Chemex\",\n  \"Cold Brew\",\n  \"French Press\",\n  \"Hario Switch\",\n  \"Kalita Wave\",\n  \"Moka Pot\",\n  \"Portafilter\",\n  \"Syphon\",\n  \"Turkish Coffee\",\n  \"V60\",\n];\n\nfunction BrewMethodSelection({ selectedMethods, setSelectedMethods }) {\n  const [allMethods, setAllMethods] = useState(initialMethods);\n  const [customMethod, setCustomMethod] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  // Save selectedMethods to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"selectedMethods\", JSON.stringify(selectedMethods));\n  }, [selectedMethods]);\n\n  // Load selectedMethods from localStorage when component mounts\n  useEffect(() => {\n    const loadedMethods = localStorage.getItem(\"selectedMethods\");\n    if (loadedMethods) {\n      setSelectedMethods(JSON.parse(loadedMethods));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const toggleMethod = (method) => {\n    if (selectedMethods.includes(method)) {\n      setSelectedMethods(selectedMethods.filter((m) => m !== method));\n    } else if (selectedMethods.length < 6) {\n      setSelectedMethods([...selectedMethods, method]);\n    }\n  };\n\n  const handleCustomMethodChange = (event) => {\n    setCustomMethod(event.target.value);\n  };\n\n  const addCustomMethod = () => {\n    if (customMethod && !allMethods.includes(customMethod)) {\n      setAllMethods([...allMethods, customMethod]);\n      setCustomMethod(\"\");\n      // Add the custom method to the selected methods\n      toggleMethod(customMethod);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // If a custom method is entered, add it\n    if (customMethod) {\n      addCustomMethod();\n    }\n\n    // Then check if enough methods are selected\n    if (selectedMethods.length < 2) {\n      setError(\"Please select at least 2 methods\");\n      return;\n    }\n    setError(null);\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Coffee Dice</h1>\n      <p className={styles.introText}>\n        Choose your brew methods, roll the dice, and enjoy your coffee!\n      </p>\n      <form onSubmit={handleSubmit} className={styles.options}>\n        {allMethods.map((method) => (\n          <label key={method} className={styles.option}>\n            <input\n              type=\"checkbox\"\n              id={method}\n              checked={selectedMethods.includes(method)}\n              onChange={() => toggleMethod(method)}\n            />\n            {method}\n          </label>\n        ))}\n        <input\n          type=\"text\"\n          value={customMethod}\n          onChange={handleCustomMethodChange}\n          placeholder=\"Add your custom method...\"\n          className={styles.customMethodInput}\n        />\n        <button type=\"submit\" className={styles.submitButton}>\n          Add\n        </button>\n      </form>\n\n      {error && <p>{error}</p>}\n    </div>\n  );\n}\n\nexport default BrewMethodSelection;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Dice from \"./components/Dice\";\nimport BrewMethodSelection from \"./components/BrewMethodSelection\";\n\nfunction App() {\n  const [selectedMethods, setSelectedMethods] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <BrewMethodSelection\n        selectedMethods={selectedMethods}\n        setSelectedMethods={setSelectedMethods}\n      />\n      {selectedMethods.length >= 2 && <Dice options={selectedMethods} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Dice_container__2kszn\",\"dice\":\"Dice_dice__2VuyN\",\"rolling\":\"Dice_rolling__2ux-D\",\"face\":\"Dice_face__15l7W\",\"face-1\":\"Dice_face-1__-XkGa\",\"face-2\":\"Dice_face-2__3DYou\",\"face-3\":\"Dice_face-3__1mZea\",\"face-4\":\"Dice_face-4__3h-gB\",\"face-5\":\"Dice_face-5__20Cdu\",\"face-6\":\"Dice_face-6__2G_XT\",\"roll\":\"Dice_roll__9Koxb\"};"],"sourceRoot":""}